__default__:
    time: 0-01:00:00
    job-name: '{rule}'
    cpus: 1
    mem: 8GB
    partition: bullseye
    output: 'slurmlogs/{rule}_$(date "+%Y-%m-%d_%H-%M-%S")_job%j.out.txt'
    error: 'slurmlogs/{rule}_$(date "+%Y-%m-%d_%H-%M-%S")_job%j.err.txt'

A_checkm:
    cpus: 8
    mem: 40GB

B_seqids:
    cpus: 8

C_phylo:
    cpus: 32 
    mem: 20GB
    # Though most alignment phylogenetic trees can be computed < 2h
    # some can take fairly long even after alignment filtering.
    # Thus, this limit is much higher than needed for most, just to avoit
    # any terminations due to the time limit
    time: 4-00:00:00

# The pairwise distance on the 900+ trees really take some resources
C_space:
    cpus: 32
    mem: 40GB
    time: 08:00:00

E_filter:
    cpus: 32
    mem: 40GB
    time: 02:00:00

E_stat:
    cpus: 32
    mem: 40GB
    time: 02:00:00


F_cmfinder:
    # from CMfinder help page: 
    #  (currently only the internal cmsearch commands in cmfinder04)
    #  => Most of the tool is single-core anyway
    cpus: 1 
    mem: 40GB
    time: 7-00:00:00

G_cmsearch:
    cpus: 8
    mem: 8GB
    time: 0-04:00:00

G_combine:
    cpus: 8
    mem: 16GB
    time: 0-04:00:00

G2_cmsearch:
    cpus: 8
    mem: 8GB
    time: 0-00:30:00

G2_combine:
    cpus: 8
    mem: 16GB
    time: 0-04:00:00


# large motifs can hit 1h time limit
H_pscore:
    time: 0-05:00:00
    cpus: 1
    mem: 8GB

H_pscore2:
    time: 0-05:00:00
    cpus: 1
    mem: 8GB

H_rscape:
    time: 0-05:00:00
    cpus: 1
    mem: 8GB

rule H_combine:
    time: 0-01:00:00
    cpus: 8
    mem: 16GB



I_build:
    time: 0-05:00:00
    cpus: 4
    mem: 8GB

I_cmsearch:
    time: 0-10:00:00
    cpus: 4
    mem: 8GB


J_collect:
    cpus: 32
    mem: 100GB
    time: 0-05:00:00


J_seq_pos:
    cpus: 16
    mem: 32GB
    time: 0-05:00:00


J_homologs:
    cpus: 16
    mem: 8GB
    time: 0-01:00:00
